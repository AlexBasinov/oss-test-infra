presubmits:
  google/oracle-toolkit:
  - name: ansible-lint-validator
    decorate: true
    optional: true
    run_if_changed: '^.*\.ya?ml$'
    spec:
      serviceAccountName: prowjob-default-sa
      containers:
        - image: cytopia/ansible-lint
          imagePullPolicy: Always
          command:
            - ansible-lint
  - name: oracle-toolkit-install-single-instance-on-bms
    cluster: build-gcp-oracle-team
    always_run: true
    # Introducing max_concurrency, as noted in the design doc (internal) comment thread: https://docs.google.com/document/d/1mv2nV0Cv6EKv-ZTScv59JdyqvmNfYeMojqFJdJVhdmk/edit?pli=1&disco=AAAAUQ1gyBE
    max_concurrency: 1
    decorate: true
    spec:
      serviceAccountName: prowjob-default-sa
      containers:
      - image: quay.io/ansible/ansible-runner:stable-2.9-latest
        command:
        # . represents the base directory of the cloned oracle-toolkit repo, which is oracle-toolkit
        - ./presubmit_tests/single-instance-on-bms.sh
        resources:
          requests:
            memory: "2.0Gi"
            cpu: "3.0"
        volumeMounts:
        - name: all-in-one
          mountPath: /etc/files_needed_for_tk
      volumes:
      - name: all-in-one
        projected:
          sources:
          - secret:
              name: ansible-ssh-private-key
              items:
                - key: ansible_ssh_private_key
                  path: id_rsa_bms_tk_key
                  mode: 0400
          - configMap:
              name: single-instance-asm
              items:
                - key: single-instance-asm.json
                  path: single-instance-asm.json
          - configMap:
              name: single-instance-data-mounts
              items:
                - key: single-instance-data-mounts.json
                  path: single-instance-data-mounts.json
          - configMap:
              name: single-instance-inventory
              items:
                - key: single-instance-inventory
                  path: single-instance-inventory
          - configMap:
              name: google-cloud-sdk
              items:
                - key: google-cloud-sdk.repo
                  path: google-cloud-sdk.repo
  - name: oracle-toolkit-install-rac-on-bms
    cluster: build-gcp-oracle-team
    always_run: true
    # Introducing max_concurrency, as noted in the design doc (internal) comment thread: https://docs.google.com/document/d/1mv2nV0Cv6EKv-ZTScv59JdyqvmNfYeMojqFJdJVhdmk/edit?pli=1&disco=AAAAUQ1gyBE
    max_concurrency: 1
    decorate: true
    spec:
      serviceAccountName: prowjob-default-sa
      containers:
      - image: quay.io/ansible/ansible-runner:stable-2.9-latest
        command:
        # . represents the base directory of the cloned oracle-toolkit repo, which is oracle-toolkit
        - ./presubmit_tests/rac-on-bms.sh
        resources:
          requests:
            memory: "2.0Gi"
            cpu: "3.0"
        volumeMounts:
        - name: all-in-one
          mountPath: /etc/files_needed_for_tk
      volumes:
      - name: all-in-one
        projected:
          sources:
          - secret:
              name: ansible-ssh-private-key
              items:
                - key: ansible_ssh_private_key
                  path: id_rsa_bms_tk_key
                  mode: 0400
          - configMap:
              name: rac-asm
              items:
                - key: rac-asm.json
                  path: rac-asm.json
          - configMap:
              name: rac-data-mounts
              items:
                - key: rac-data-mounts.json
                  path: rac-data-mounts.json
          - configMap:
              name: rac-inventory
              items:
                - key: rac-inventory
                  path: rac-inventory
          - configMap:
              name: rac-config
              items:
                - key: rac-config.json
                  path: rac-config.json
          - configMap:
              name: google-cloud-sdk
              items:
                - key: google-cloud-sdk.repo
                  path: google-cloud-sdk.repo
